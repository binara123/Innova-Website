@use "sass:color";
@import "../variables";

@mixin bf($c, $bg, $bgh, $bga) {
  color: $c !important;
  background-color: $bg !important;
  border: 2px solid $bg !important;

  .ph {
    color: $c !important;
    font-size: 0.875rem;
  }

  &.btn-outline {
    background-color: transparent !important;
    color: $bg !important;
    font-weight: 600;

    .ph {
      color: $bg !important;
    }
  }

  &.bg-light {
    background-color: color.adjust($bg , $lightness:20%) !important;
    color: $bg !important;
    border: none !important;
    font-weight: 600;

    .ph {
      color: $bg !important;
    }

    &:hover {
      color: color.adjust($bg , $lightness:25%) !important;
      border: 0 !important;
      background-color: $bg !important;

      .ph {
        color: color.adjust($bg , $lightness:25%) !important;
      }
    }
  }

  @include boh($color-white, $bgh, $bga);
}

@mixin boh($c, $bgh, $bga) {

  &:hover {
    color: $c !important;
    border: 2px solid $bgh !important;
    background-color: $bgh !important;

    .ph {
      color: $c !important;
    }
  }

  &:focus {
    box-shadow: none !important;
  }

  &:active {
    color: $c;
    border: 2px solid $bga !important;
    background-color: $bga !important;

    .ph {
      color: $c !important;
    }
  }
}

.btn {
  border-radius: 0.75rem;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  border: none;
  padding: 0.5rem 0.75rem;
  gap: 8px;

  .ph {
    font-size: 1.25rem !important;
  }

  &[disabled] {
    opacity: 0.6;
  }

  &.tool-btns {
    padding: 0.75rem !important;
  }

  &.btn-default {
    border: 2px solid transparent;
    @include boh($color-white, $color-neutral-light-medium, $color-neutral-dark);
  }

  &.btn-icon-only,
  &.btn-close {
    cursor: pointer;
    box-shadow: none;
    justify-content: unset;

    .ph {
      color: $color-neutral;

      &.btn-icon-only-white {
        color: $color-white !important;
      }
    }

    &:hover {

      mat-icon,
      i {
        color: $color-neutral-light-medium;
      }
    }

    &:active {

      mat-icon,
      i {
        color: $color-neutral-dark;
      }
    }
  }

  &.btn-text-only {
    box-shadow: none;
    outline: 0;
    border: none !important;
    padding: 0;
    color: $color-primary;
    font-weight: 700;

    &:hover {

      color: $color-primary-dark;

      .ph-arrow-right {
        animation: bounce-horizontal 0.6s ease-in-out;
      }

      .ph-download {
        animation: bounce-down 0.6s ease-in-out;
      }
    } 
 
  }

  &.btn-primary {
    @include bf($color-white, $color-primary, $color-primary-light-medium, $color-primary-dark);
  }

  &.btn-info {
    @include bf($color-white, $color-info, $color-info-light-medium, $color-info-dark);
  }

  &.btn-success {
    @include bf($color-white, $color-success, $color-success-light-medium, $color-success-dark);
  }

  &.btn-warning {
    @include bf($color-white, $color-warning, $color-warning-light-medium, $color-warning-dark);
  }

  &.btn-danger {
    @include bf($color-white, $color-danger, $color-danger-light-medium, $color-danger-dark);
  }

  &.btn-grey {
    background-color: $color-neutral-extra-light !important;
    border-radius: 50%;
  }

  &.btn-disabled {
    opacity: 0.5;
  }

  .btn-md {
    padding: 0.4rem 0.6rem !important;
  }

  &.btn-sm {
    font-size: 0.75rem;
    padding: 0.3rem 0.5rem !important;
  }
}

/* icon animation */
.hover-fx {
  font-size: 28px;
  display: inline-block;
  cursor: pointer;
  margin: 15px;
  width: 28px;
  height: 28px;
  border-radius: 50%;
  text-align: center;
  position: relative;
  color: $color-primary-extra-light;
  background-color: transparent;
  transition: 300ms;
}

.hover-fx:after {
  pointer-events: none;
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  content: '';
  box-sizing: content-box;
  box-shadow: 0 0 0 2px $color-primary;
  top: 0;
  left: 0;
  opacity: 0;
  transition: 300ms;
}

.hover-fx:hover {
  background-color: transparent;
  color: $color-primary;
}

.hover-fx:hover:after {
  opacity: 1;
  transform: scale(1.15);
}

// animation link
.animation-link {
  position: relative;
  display: inline-block;
  text-decoration: none;
  color: inherit;

  a {
    color: $color-neutral-darker;
    text-decoration: none;
  }

  .ph {
    color: $color-neutral-darker;
  }

  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 2px;
    transform: scaleX(0);
    background: $color-primary !important;
    transition: 0.7s transform cubic-bezier(0.06, 0.9, 0.28, 1);
  }

  &:hover {
    color: $color-primary;

    a,
    .ph {
      color: $color-primary !important;
    }
  }

  &:hover::after {
    transform: scaleX(1);
  }

}

/* Arrow bounce animation */
@keyframes bounce-horizontal {
  0%, 20%, 50%, 80%, 100% {
    transform: translateX(0);
  }
  40% {
    transform: translateX(8px);
  }
  60% {
    transform: translateX(4px);
  }
}

/*  Define vertical bounce animation */
@keyframes bounce-down {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(8px);
  }
  60% {
    transform: translateY(4px);
  }
}